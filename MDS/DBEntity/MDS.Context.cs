//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MDS.DBEntity
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MDSEntities : DbContext
    {
        public MDSEntities()
            : base("name=MDSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<sp_ForgetPwd_Result> sp_ForgetPwd(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ForgetPwd_Result>("sp_ForgetPwd", emailParameter);
        }
    
        public virtual ObjectResult<sp_GetMenu_Result> sp_GetMenu(string flag, string langCode, Nullable<int> menuId)
        {
            var flagParameter = flag != null ?
                new ObjectParameter("flag", flag) :
                new ObjectParameter("flag", typeof(string));
    
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            var menuIdParameter = menuId.HasValue ?
                new ObjectParameter("MenuId", menuId) :
                new ObjectParameter("MenuId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetMenu_Result>("sp_GetMenu", flagParameter, langCodeParameter, menuIdParameter);
        }
    
        public virtual ObjectResult<sp_GetUser_Result> sp_GetUser(string flag, Nullable<int> userId)
        {
            var flagParameter = flag != null ?
                new ObjectParameter("flag", flag) :
                new ObjectParameter("flag", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetUser_Result>("sp_GetUser", flagParameter, userIdParameter);
        }
    
        public virtual ObjectResult<sp_SelectAllRole_Result> sp_SelectAllRole()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectAllRole_Result>("sp_SelectAllRole");
        }
    
        public virtual ObjectResult<sp_SelectAllUserDetail_Result> sp_SelectAllUserDetail()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectAllUserDetail_Result>("sp_SelectAllUserDetail");
        }
    
        public virtual ObjectResult<sp_SetMenu_Result> sp_SetMenu(string flag, string langCode, Nullable<int> menuId, string menuLevel, string menuParent, string menuGroup, string menuNo, string user, Nullable<int> langId, string langName)
        {
            var flagParameter = flag != null ?
                new ObjectParameter("flag", flag) :
                new ObjectParameter("flag", typeof(string));
    
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            var menuIdParameter = menuId.HasValue ?
                new ObjectParameter("MenuId", menuId) :
                new ObjectParameter("MenuId", typeof(int));
    
            var menuLevelParameter = menuLevel != null ?
                new ObjectParameter("MenuLevel", menuLevel) :
                new ObjectParameter("MenuLevel", typeof(string));
    
            var menuParentParameter = menuParent != null ?
                new ObjectParameter("MenuParent", menuParent) :
                new ObjectParameter("MenuParent", typeof(string));
    
            var menuGroupParameter = menuGroup != null ?
                new ObjectParameter("MenuGroup", menuGroup) :
                new ObjectParameter("MenuGroup", typeof(string));
    
            var menuNoParameter = menuNo != null ?
                new ObjectParameter("MenuNo", menuNo) :
                new ObjectParameter("MenuNo", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var langIdParameter = langId.HasValue ?
                new ObjectParameter("LangId", langId) :
                new ObjectParameter("LangId", typeof(int));
    
            var langNameParameter = langName != null ?
                new ObjectParameter("LangName", langName) :
                new ObjectParameter("LangName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SetMenu_Result>("sp_SetMenu", flagParameter, langCodeParameter, menuIdParameter, menuLevelParameter, menuParentParameter, menuGroupParameter, menuNoParameter, userParameter, langIdParameter, langNameParameter);
        }
    
        public virtual ObjectResult<sp_SetMenuLink_Result> sp_SetMenuLink(string flag, Nullable<int> menuId, string action)
        {
            var flagParameter = flag != null ?
                new ObjectParameter("flag", flag) :
                new ObjectParameter("flag", typeof(string));
    
            var menuIdParameter = menuId.HasValue ?
                new ObjectParameter("MenuId", menuId) :
                new ObjectParameter("MenuId", typeof(int));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SetMenuLink_Result>("sp_SetMenuLink", flagParameter, menuIdParameter, actionParameter);
        }
    
        public virtual ObjectResult<sp_UM_AddUserDetail_Result> sp_UM_AddUserDetail(string flag, Nullable<int> userId, string empCode, Nullable<int> userGId, string username, string password, string prefix, string firstnameTh, string lastnameTh, string firstnameEn, string lastnameEn, Nullable<int> departId, string email, string tel, string mobile, string fax, string userImage, string status, string user, string passwordOld, string passwordNew, string ipaddress)
        {
            var flagParameter = flag != null ?
                new ObjectParameter("flag", flag) :
                new ObjectParameter("flag", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var empCodeParameter = empCode != null ?
                new ObjectParameter("EmpCode", empCode) :
                new ObjectParameter("EmpCode", typeof(string));
    
            var userGIdParameter = userGId.HasValue ?
                new ObjectParameter("UserGId", userGId) :
                new ObjectParameter("UserGId", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var prefixParameter = prefix != null ?
                new ObjectParameter("Prefix", prefix) :
                new ObjectParameter("Prefix", typeof(string));
    
            var firstnameThParameter = firstnameTh != null ?
                new ObjectParameter("FirstnameTh", firstnameTh) :
                new ObjectParameter("FirstnameTh", typeof(string));
    
            var lastnameThParameter = lastnameTh != null ?
                new ObjectParameter("LastnameTh", lastnameTh) :
                new ObjectParameter("LastnameTh", typeof(string));
    
            var firstnameEnParameter = firstnameEn != null ?
                new ObjectParameter("FirstnameEn", firstnameEn) :
                new ObjectParameter("FirstnameEn", typeof(string));
    
            var lastnameEnParameter = lastnameEn != null ?
                new ObjectParameter("LastnameEn", lastnameEn) :
                new ObjectParameter("LastnameEn", typeof(string));
    
            var departIdParameter = departId.HasValue ?
                new ObjectParameter("DepartId", departId) :
                new ObjectParameter("DepartId", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var userImageParameter = userImage != null ?
                new ObjectParameter("UserImage", userImage) :
                new ObjectParameter("UserImage", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var passwordOldParameter = passwordOld != null ?
                new ObjectParameter("PasswordOld", passwordOld) :
                new ObjectParameter("PasswordOld", typeof(string));
    
            var passwordNewParameter = passwordNew != null ?
                new ObjectParameter("PasswordNew", passwordNew) :
                new ObjectParameter("PasswordNew", typeof(string));
    
            var ipaddressParameter = ipaddress != null ?
                new ObjectParameter("Ipaddress", ipaddress) :
                new ObjectParameter("Ipaddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UM_AddUserDetail_Result>("sp_UM_AddUserDetail", flagParameter, userIdParameter, empCodeParameter, userGIdParameter, usernameParameter, passwordParameter, prefixParameter, firstnameThParameter, lastnameThParameter, firstnameEnParameter, lastnameEnParameter, departIdParameter, emailParameter, telParameter, mobileParameter, faxParameter, userImageParameter, statusParameter, userParameter, passwordOldParameter, passwordNewParameter, ipaddressParameter);
        }
    
        public virtual ObjectResult<sp_UM_AddUserDetail_bk_Result> sp_UM_AddUserDetail_bk(string username, string password, string prefixTH, string fnameTH, string lnameTH, string prefixEN, string fnameEN, string lnameEN, string idCard, string email, string createBy, string iP, string tel, string status, Nullable<int> deptID, Nullable<int> roleID)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var prefixTHParameter = prefixTH != null ?
                new ObjectParameter("PrefixTH", prefixTH) :
                new ObjectParameter("PrefixTH", typeof(string));
    
            var fnameTHParameter = fnameTH != null ?
                new ObjectParameter("FnameTH", fnameTH) :
                new ObjectParameter("FnameTH", typeof(string));
    
            var lnameTHParameter = lnameTH != null ?
                new ObjectParameter("LnameTH", lnameTH) :
                new ObjectParameter("LnameTH", typeof(string));
    
            var prefixENParameter = prefixEN != null ?
                new ObjectParameter("PrefixEN", prefixEN) :
                new ObjectParameter("PrefixEN", typeof(string));
    
            var fnameENParameter = fnameEN != null ?
                new ObjectParameter("FnameEN", fnameEN) :
                new ObjectParameter("FnameEN", typeof(string));
    
            var lnameENParameter = lnameEN != null ?
                new ObjectParameter("LnameEN", lnameEN) :
                new ObjectParameter("LnameEN", typeof(string));
    
            var idCardParameter = idCard != null ?
                new ObjectParameter("IdCard", idCard) :
                new ObjectParameter("IdCard", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var createByParameter = createBy != null ?
                new ObjectParameter("CreateBy", createBy) :
                new ObjectParameter("CreateBy", typeof(string));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var deptIDParameter = deptID.HasValue ?
                new ObjectParameter("DeptID", deptID) :
                new ObjectParameter("DeptID", typeof(int));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UM_AddUserDetail_bk_Result>("sp_UM_AddUserDetail_bk", usernameParameter, passwordParameter, prefixTHParameter, fnameTHParameter, lnameTHParameter, prefixENParameter, fnameENParameter, lnameENParameter, idCardParameter, emailParameter, createByParameter, iPParameter, telParameter, statusParameter, deptIDParameter, roleIDParameter);
        }
    
        public virtual ObjectResult<sp_UM_GetUserGroup_Result> sp_UM_GetUserGroup(string flag, Nullable<int> userGId)
        {
            var flagParameter = flag != null ?
                new ObjectParameter("flag", flag) :
                new ObjectParameter("flag", typeof(string));
    
            var userGIdParameter = userGId.HasValue ?
                new ObjectParameter("UserGId", userGId) :
                new ObjectParameter("UserGId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UM_GetUserGroup_Result>("sp_UM_GetUserGroup", flagParameter, userGIdParameter);
        }
    
        public virtual int sp_UM_GrantMenu(Nullable<int> userId, Nullable<int> authorId, string strMenu, string iP)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var authorIdParameter = authorId.HasValue ?
                new ObjectParameter("AuthorId", authorId) :
                new ObjectParameter("AuthorId", typeof(int));
    
            var strMenuParameter = strMenu != null ?
                new ObjectParameter("strMenu", strMenu) :
                new ObjectParameter("strMenu", typeof(string));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UM_GrantMenu", userIdParameter, authorIdParameter, strMenuParameter, iPParameter);
        }
    
        public virtual int sp_UM_GrantMenuFirstTime(Nullable<int> userID, Nullable<int> roleID, string iP)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UM_GrantMenuFirstTime", userIDParameter, roleIDParameter, iPParameter);
        }
    
        public virtual ObjectResult<sp_UM_SelectAllMenu_Result> sp_UM_SelectAllMenu()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UM_SelectAllMenu_Result>("sp_UM_SelectAllMenu");
        }
    
        public virtual ObjectResult<sp_UM_SelectMenuByUserID_Result> sp_UM_SelectMenuByUserID(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UM_SelectMenuByUserID_Result>("sp_UM_SelectMenuByUserID", userIDParameter);
        }
    
        public virtual ObjectResult<sp_UM_SelectMenuFromUserID_Result> sp_UM_SelectMenuFromUserID(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UM_SelectMenuFromUserID_Result>("sp_UM_SelectMenuFromUserID", userIDParameter);
        }
    
        public virtual ObjectResult<sp_UM_SetGrantMenu_Result> sp_UM_SetGrantMenu(string flag, Nullable<int> userGId, string userGNameTh, string userGNameEn, string user, string status, Nullable<int> menuId, Nullable<int> grantId)
        {
            var flagParameter = flag != null ?
                new ObjectParameter("flag", flag) :
                new ObjectParameter("flag", typeof(string));
    
            var userGIdParameter = userGId.HasValue ?
                new ObjectParameter("UserGId", userGId) :
                new ObjectParameter("UserGId", typeof(int));
    
            var userGNameThParameter = userGNameTh != null ?
                new ObjectParameter("UserGNameTh", userGNameTh) :
                new ObjectParameter("UserGNameTh", typeof(string));
    
            var userGNameEnParameter = userGNameEn != null ?
                new ObjectParameter("UserGNameEn", userGNameEn) :
                new ObjectParameter("UserGNameEn", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var menuIdParameter = menuId.HasValue ?
                new ObjectParameter("MenuId", menuId) :
                new ObjectParameter("MenuId", typeof(int));
    
            var grantIdParameter = grantId.HasValue ?
                new ObjectParameter("GrantId", grantId) :
                new ObjectParameter("GrantId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UM_SetGrantMenu_Result>("sp_UM_SetGrantMenu", flagParameter, userGIdParameter, userGNameThParameter, userGNameEnParameter, userParameter, statusParameter, menuIdParameter, grantIdParameter);
        }
    
        public virtual ObjectResult<sp_UpdateRole_Result> sp_UpdateRole(Nullable<int> userId, Nullable<int> roleID)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UpdateRole_Result>("sp_UpdateRole", userIdParameter, roleIDParameter);
        }
    
        public virtual ObjectResult<sp_UserLogin_Result> sp_UserLogin(string username, string password, string iP)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UserLogin_Result>("sp_UserLogin", usernameParameter, passwordParameter, iPParameter);
        }
    
        public virtual ObjectResult<sp_ResetPwd_Result> sp_ResetPwd(Nullable<int> userId, string pwdNew, string iP)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pwdNewParameter = pwdNew != null ?
                new ObjectParameter("pwdNew", pwdNew) :
                new ObjectParameter("pwdNew", typeof(string));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ResetPwd_Result>("sp_ResetPwd", userIdParameter, pwdNewParameter, iPParameter);
        }
    }
}
